{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Lottery from '../../ethereum/lottery';\nimport { Card } from 'semantic-ui-react';\n\nvar LotteryShow = /*#__PURE__*/function (_Component) {\n  _inherits(LotteryShow, _Component);\n\n  var _super = _createSuper(LotteryShow);\n\n  function LotteryShow() {\n    _classCallCheck(this, LotteryShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LotteryShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          numberOfPlayers = _this$props.numberOfPlayers,\n          valuePremium = _this$props.valuePremium,\n          restPlayers = _this$props.restPlayers,\n          countPlayers = _this$props.countPlayers;\n      var items = [{\n        header: valuePremium,\n        meta: 'Value of Premium',\n        description: 'The value of premium for winner the raffle',\n        style: {\n          overflowwrap: 'break-word'\n        }\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, this.renderCards());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var lottery, players, premium, restPlayers, countPlayers;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                lottery = Lottery(props.query.address);\n                _context.next = 3;\n                return lottery.methods.getPlayers().call();\n\n              case 3:\n                players = _context.sent;\n                _context.next = 6;\n                return lottery.methods.getPremium().call();\n\n              case 6:\n                premium = _context.sent;\n                _context.next = 9;\n                return lottery.methods.getRestPlayers().call();\n\n              case 9:\n                restPlayers = _context.sent;\n                _context.next = 12;\n                return lottery.methods.getCountPlayers().call();\n\n              case 12:\n                countPlayers = _context.sent;\n                //console.log(players);\n                //console.log(premium);\n                console.log(restPlayers); //console.log(countPlayers);\n\n                return _context.abrupt(\"return\", {\n                  numberOfPlayers: players,\n                  valuePremium: premium,\n                  restPlayers: restPlayers,\n                  countPlayers: countPlayers\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return LotteryShow;\n}(Component);\n\nexport default LotteryShow;","map":{"version":3,"sources":["C:/Users/walti/OneDrive/√Årea de Trabalho/LotteryTest2/pages/lottery/show.js"],"names":["React","Component","Layout","Lottery","Card","LotteryShow","props","numberOfPlayers","valuePremium","restPlayers","countPlayers","items","header","meta","description","style","overflowwrap","renderCards","lottery","query","address","methods","getPlayers","call","players","getPremium","premium","getRestPlayers","getCountPlayers","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,IAAT,QAAqB,mBAArB;;IAEMC,W;;;;;;;;;;;;;kCAwBW;AAAA,wBAML,KAAKC,KANA;AAAA,UAELC,eAFK,eAELA,eAFK;AAAA,UAGLC,YAHK,eAGLA,YAHK;AAAA,UAILC,WAJK,eAILA,WAJK;AAAA,UAKLC,YALK,eAKLA,YALK;AAOT,UAAMC,KAAK,GAAG,CAAC;AACXC,QAAAA,MAAM,EAACJ,YADI;AAEXK,QAAAA,IAAI,EAAC,kBAFM;AAGXC,QAAAA,WAAW,EAAE,4CAHF;AAIXC,QAAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE;AAAf;AAJI,OAAD,CAAd;AAOA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEL;AAAnB,QAAP;AACH;;;6BAEO;AACJ,aACI,MAAC,MAAD,QACK,KAAKM,WAAL,EADL,CADJ;AAKH;;;;uGA9C4BX,K;;;;;;AACjBY,gBAAAA,O,GAASf,OAAO,CAACG,KAAK,CAACa,KAAN,CAAYC,OAAb,C;;uBAIAF,OAAO,CAACG,OAAR,CAAgBC,UAAhB,GAA6BC,IAA7B,E;;;AAAhBC,gBAAAA,O;;uBACgBN,OAAO,CAACG,OAAR,CAAgBI,UAAhB,GAA6BF,IAA7B,E;;;AAAhBG,gBAAAA,O;;uBACoBR,OAAO,CAACG,OAAR,CAAgBM,cAAhB,GAAiCJ,IAAjC,E;;;AAApBd,gBAAAA,W;;uBACqBS,OAAO,CAACG,OAAR,CAAgBO,eAAhB,GAAkCL,IAAlC,E;;;AAArBb,gBAAAA,Y;AAEN;AACA;AACAmB,gBAAAA,OAAO,CAACC,GAAR,CAAYrB,WAAZ,E,CACA;;iDAEM;AACFF,kBAAAA,eAAe,EAAEiB,OADf;AAEFhB,kBAAAA,YAAY,EAAEkB,OAFZ;AAGFjB,kBAAAA,WAAW,EAAEA,WAHX;AAIFC,kBAAAA,YAAY,EAAEA;AAJZ,iB;;;;;;;;;;;;;;;;;;;EAhBUT,S;;AAkD1B,eAAeI,WAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport Lottery from '../../ethereum/lottery';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\nclass LotteryShow extends Component {\r\n    static async getInitialProps(props){\r\n          const lottery= Lottery(props.query.address);\r\n\r\n         \r\n\r\n          const players = await lottery.methods.getPlayers().call();\r\n          const premium = await lottery.methods.getPremium().call();\r\n          const restPlayers = await lottery.methods.getRestPlayers().call();\r\n          const countPlayers = await lottery.methods.getCountPlayers().call();\r\n          \r\n          //console.log(players);\r\n          //console.log(premium);\r\n          console.log(restPlayers);\r\n          //console.log(countPlayers);\r\n\r\n          return{\r\n              numberOfPlayers: players,\r\n              valuePremium: premium,\r\n              restPlayers: restPlayers,\r\n              countPlayers: countPlayers\r\n          };\r\n    }\r\n\r\n    renderCards(){\r\n        const {\r\n            numberOfPlayers,\r\n            valuePremium,\r\n            restPlayers,\r\n            countPlayers\r\n        } = this.props;\r\n        const items = [{\r\n            header:valuePremium,\r\n            meta:'Value of Premium',\r\n            description: 'The value of premium for winner the raffle',\r\n            style: {overflowwrap: 'break-word'}\r\n        }];\r\n\r\n        return <Card.Group items={items}/>\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Layout>\r\n                {this.renderCards()}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LotteryShow;"]},"metadata":{},"sourceType":"module"}