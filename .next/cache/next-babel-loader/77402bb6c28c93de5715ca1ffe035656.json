{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport create from '../../ethereum/create';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\nexport default class NewLottery extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      numberOfPlayers: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await create.methods.createGame(this.state.numberOfPlayers).send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Create a Lottery\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Number Of Players\"), __jsx(Input, {\n      label: \"Number\",\n      labelPosition: \"right\",\n      value: this.state.numberOfPlayers,\n      onChange: event => this.setState({\n        numberOfPlayers: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Number Of Players\"), __jsx(Input, {\n      label: \"Number\",\n      labelPosition: \"right\",\n      value: this.state.numberOfPlayers,\n      onChange: event => this.setState({\n        numberOfPlayers: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Ooops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Create!\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/walti/OneDrive/Área de Trabalho/LotteryTest2/pages/lottery/new.js"],"names":["React","Component","Form","Button","Input","Message","Layout","create","web3","Router","NewLottery","numberOfPlayers","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","createGame","state","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA2C,mBAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAsB,cAAtB;AAEA,eAAe,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCACtC;AACHU,MAAAA,eAAe,EAAE,EADd;AAEHC,MAAAA,YAAY,EAAE,EAFX;AAGHC,MAAAA,OAAO,EAAE;AAHN,KADsC;;AAAA,sCAOnC,MAAOC,KAAP,IAAe;AACpBA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE,IAAV;AAAgBD,QAAAA,YAAY,EAAE;AAA9B,OAAd;;AACA,UAAG;AACD,cAAMK,QAAQ,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMZ,MAAM,CAACa,OAAP,CACLC,UADK,CACM,KAAKC,KAAL,CAAWX,eADjB,EAELY,IAFK,CAEA;AACDC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADb,SAFA,CAAN;AAMAR,QAAAA,MAAM,CAACgB,SAAP,CAAiB,GAAjB;AAED,OAVD,CAUC,OAAMC,GAAN,EAAU;AACT,aAAKV,QAAL,CAAc;AAACJ,UAAAA,YAAY,EAAEc,GAAG,CAACC;AAAnB,SAAd;AACD;;AAED,WAAKX,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAd;AAEL,KA3B6C;AAAA;;AA6B9Ce,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,qCADJ,EAEI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWV;AAAnD,OACI,MAAC,IAAD,CAAM,KAAN,QACI,yCADJ,EAEI,MAAC,KAAD;AACC,MAAA,KAAK,EAAC,QADP;AAEC,MAAA,aAAa,EAAC,OAFf;AAGC,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWX,eAHnB;AAIC,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKE,QAAL,CAAc;AAACL,QAAAA,eAAe,EAAEG,KAAK,CAACgB,MAAN,CAAaC;AAA/B,OAAd;AAJpB,MAFJ,CADJ,EAUI,MAAC,IAAD,CAAM,KAAN,QACI,yCADJ,EAEI,MAAC,KAAD;AACC,MAAA,KAAK,EAAC,QADP;AAEC,MAAA,aAAa,EAAC,OAFf;AAGC,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWX,eAHnB;AAIC,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKE,QAAL,CAAc;AAACL,QAAAA,eAAe,EAAEG,KAAK,CAACgB,MAAN,CAAaC;AAA/B,OAAd;AAJpB,MAFJ,CAVJ,EAmBI,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,QAAtB;AAA+B,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWV;AAAnD,MAnBJ,EAoBI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,OAA5B;AAAqC,MAAA,OAAO;AAA5C,iBApBJ,CAFJ,CADJ;AA6BH;;AA3D6C","sourcesContent":["import React, { Component } from 'react';\r\nimport {Form, Button, Input, Message} from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport create from '../../ethereum/create';\r\nimport web3 from '../../ethereum/web3';\r\nimport { Router} from '../../routes';\r\n\r\nexport default class NewLottery extends Component {\r\n    state = {\r\n         numberOfPlayers: '',\r\n         errorMessage: '',\r\n         loading: false\r\n    };\r\n\r\n    onSubmit = async (event)=>{\r\n          event.preventDefault();\r\n\r\n          this.setState({loading: true, errorMessage: ''})\r\n          try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            await create.methods\r\n            .createGame(this.state.numberOfPlayers)\r\n            .send({\r\n                 from: accounts[0]\r\n            });\r\n\r\n            Router.pushRoute('/');\r\n            \r\n          }catch(err){\r\n            this.setState({errorMessage: err.message}); \r\n          }\r\n\r\n          this.setState({loading: false})\r\n         \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <h3>Create a Lottery</h3>\r\n                <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                    <Form.Field>\r\n                        <label>Number Of Players</label>\r\n                        <Input\r\n                         label=\"Number\"\r\n                         labelPosition=\"right\" \r\n                         value={this.state.numberOfPlayers}\r\n                         onChange={event => this.setState({numberOfPlayers: event.target.value})}\r\n                         />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Number Of Players</label>\r\n                        <Input\r\n                         label=\"Number\"\r\n                         labelPosition=\"right\" \r\n                         value={this.state.numberOfPlayers}\r\n                         onChange={event => this.setState({numberOfPlayers: event.target.value})}\r\n                         />\r\n                    </Form.Field>\r\n                    <Message error header=\"Ooops!\" content={this.state.errorMessage} />\r\n                    <Button loading={this.state.loading} primary>Create!</Button>\r\n                </Form>\r\n                \r\n            </Layout>            \r\n            \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}