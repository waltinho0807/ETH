{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Lottery from '../ethereum/lottery';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\n\nclass EntryForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const lottery = Lottery(this.props.address);\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await lottery.methods.enter().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, 'ether')\n        });\n        this.setState({\n          loading: false,\n          errorMessage: ''\n        });\n        Router.replaceRoute(`/lottery/${this.address}`);\n      } catch (error) {\n        this.setState({\n          errorMessage: error\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Enter in Lottery\"), __jsx(Input, {\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      label: \"ether\",\n      labelPosition: \"right\"\n    })), __jsx(Message, {\n      error: true,\n      header: \"Ooops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      primary: true,\n      loading: this.state.loading\n    }, \"Entry\"));\n  }\n\n}\n\nexport default EntryForm;","map":{"version":3,"sources":["C:/Users/walti/OneDrive/Área de Trabalho/LotteryTest2/components/EntryForm.js"],"names":["React","Component","Form","Input","Message","Button","Lottery","web3","Router","EntryForm","value","errorMessage","loading","event","preventDefault","lottery","props","address","setState","accounts","eth","getAccounts","methods","enter","send","from","utils","toWei","state","replaceRoute","error","render","onSubmit","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,OAArB,EAA8BC,MAA9B,QAA2C,mBAA3C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;;AAGA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACtB;AACJS,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADsB;;AAAA,sCAOnB,MAAOC,KAAP,IAAiB;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,OAAO,GAAGT,OAAO,CAAC,KAAKU,KAAL,CAAWC,OAAZ,CAAvB;AAEA,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAE,IAAV;AAAgBD,QAAAA,YAAY,EAAE;AAA9B,OAAd;;AAEA,UAAI;AACD,cAAMQ,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMN,OAAO,CAACO,OAAR,CAAgBC,KAAhB,GAAwBC,IAAxB,CAA6B;AAC/BC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADiB;AAE/BT,UAAAA,KAAK,EAAEH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWlB,KAA5B,EAAmC,OAAnC;AAFwB,SAA7B,CAAN;AAKA,aAAKQ,QAAL,CAAc;AAACN,UAAAA,OAAO,EAAE,KAAV;AAAiBD,UAAAA,YAAY,EAAE;AAA/B,SAAd;AACAH,QAAAA,MAAM,CAACqB,YAAP,CAAqB,YAAW,KAAKZ,OAAQ,EAA7C;AACF,OATD,CASE,OAAOa,KAAP,EAAc;AACZ,aAAKZ,QAAL,CAAc;AAACP,UAAAA,YAAY,EAAEmB;AAAf,SAAd;AACH;AACJ,KAzB6B;AAAA;;AA0B5BC,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACI,MAAC,IAAD,CAAM,KAAN,QACI,wCADJ,EAEI,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWlB,KADpB;AAEE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKK,QAAL,CAAc;AAACR,QAAAA,KAAK,EAAEG,KAAK,CAACoB,MAAN,CAAavB;AAArB,OAAd,CAFrB;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,aAAa,EAAC;AAJhB,MAFJ,CADJ,EASI,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,QAAtB;AAA+B,MAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWjB;AAAnD,MATJ,EAUI,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWhB;AAApC,eAVJ,CADJ;AAgBH;;AA3C2B;;AA8ClC,eAAeH,SAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Form, Input, Message, Button} from 'semantic-ui-react';\r\nimport Lottery from '../ethereum/lottery';\r\nimport web3 from '../ethereum/web3';\r\nimport {Router} from '../routes';\r\n\r\n\r\nclass EntryForm extends Component {\r\n    state = {\r\n        value: '',\r\n        errorMessage: '',\r\n        loading: false\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const lottery = Lottery(this.props.address);\r\n\r\n        this.setState({loading: true, errorMessage: ''})\r\n\r\n        try {\r\n           const accounts = await web3.eth.getAccounts();\r\n           await lottery.methods.enter().send({\r\n               from: accounts[0],\r\n               value: web3.utils.toWei(this.state.value, 'ether')\r\n           });\r\n\r\n           this.setState({loading: false, errorMessage: ''})\r\n           Router.replaceRoute(`/lottery/${this.address}`) \r\n        } catch (error) {\r\n            this.setState({errorMessage: error})\r\n        }\r\n    }\r\n      render(){\r\n          return(\r\n              <Form onSubmit={this.onSubmit}>\r\n                  <Form.Field>\r\n                      <label>Enter in Lottery</label>\r\n                      <Input \r\n                        value={this.state.value}\r\n                        onChange={event => this.setState({value: event.target.value})}\r\n                        label=\"ether\"\r\n                        labelPosition=\"right\"/>\r\n                  </Form.Field>\r\n                  <Message error header=\"Ooops!\" content={this.state.errorMessage} />\r\n                  <Button primary loading={this.state.loading}>\r\n                      Entry\r\n                  </Button>\r\n              </Form>\r\n          )\r\n      }\r\n}\r\n\r\nexport default EntryForm;"]},"metadata":{},"sourceType":"module"}