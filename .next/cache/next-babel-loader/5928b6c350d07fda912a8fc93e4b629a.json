{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Lottery from '../ethereum/lottery';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\n\nvar Whithdraw = /*#__PURE__*/function (_Component) {\n  _inherits(Whithdraw, _Component);\n\n  var _super = _createSuper(Whithdraw);\n\n  function Whithdraw() {\n    var _this;\n\n    _classCallCheck(this, Whithdraw);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var lottery, accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                lottery = Lottery(_this.props.address);\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.prev = 3;\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                _context.next = 9;\n                return lottery.methods.withdrawETH().send({\n                  from: accounts[0],\n                  gas: '3000000'\n                });\n\n              case 9:\n                _this.setState({\n                  loading: false,\n                  errorMessage: ''\n                });\n\n                Router.replaceRoute(\"/lottery/\".concat(_this.props.address));\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](3);\n\n                _this.setState({\n                  errorMessage: _context.t0\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Whithdraw, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Whithdraw\"), __jsx(\"p\", null, \"After the draw, the lottery manager can withdraw his share\")), __jsx(Message, {\n        error: true,\n        header: \"Ooops!\",\n        content: this.state.errorMessage\n      }), __jsx(Button, {\n        primary: true,\n        loading: this.state.loading\n      }, \"Entry\"));\n    }\n  }]);\n\n  return Whithdraw;\n}(Component);\n\nexport default Whithdraw;","map":{"version":3,"sources":["C:/Users/walti/OneDrive/Área de Trabalho/LotteryTest2/components/Withdraw.js"],"names":["React","Component","Form","Input","Message","Button","Lottery","web3","Router","Whithdraw","value","errorMessage","loading","event","preventDefault","lottery","props","address","setState","eth","getAccounts","accounts","methods","withdrawETH","send","from","gas","replaceRoute","onSubmit","state"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAGMC,S;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,OAAO,EAAE;AAHL,K;;;0EAMG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPA,gBAAAA,KAAK,CAACC,cAAN;AACMC,gBAAAA,OAFC,GAEST,OAAO,CAAC,MAAKU,KAAL,CAAWC,OAAZ,CAFhB;;AAIP,sBAAKC,QAAL,CAAc;AAAEN,kBAAAA,OAAO,EAAE,IAAX;AAAiBD,kBAAAA,YAAY,EAAE;AAA/B,iBAAd;;AAJO;AAAA;AAAA,uBAOoBJ,IAAI,CAACY,GAAL,CAASC,WAAT,EAPpB;;AAAA;AAOGC,gBAAAA,QAPH;AAAA;AAAA,uBAQGN,OAAO,CAACO,OAAR,CAAgBC,WAAhB,GAA8BC,IAA9B,CAAmC;AACrCC,kBAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD,CADuB;AAErCK,kBAAAA,GAAG,EAAE;AAFgC,iBAAnC,CARH;;AAAA;AAaH,sBAAKR,QAAL,CAAc;AAAEN,kBAAAA,OAAO,EAAE,KAAX;AAAkBD,kBAAAA,YAAY,EAAE;AAAhC,iBAAd;;AACAH,gBAAAA,MAAM,CAACmB,YAAP,oBAAgC,MAAKX,KAAL,CAAWC,OAA3C;AAdG;AAAA;;AAAA;AAAA;AAAA;;AAgBH,sBAAKC,QAAL,CAAc;AAAEP,kBAAAA,YAAY;AAAd,iBAAd;;AAhBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAmBF;AACL,aACI,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKiB;AAArB,SACI,MAAC,IAAD,CAAM,KAAN,QACI,iCADJ,EAEI,8EAFJ,CADJ,EAMI,MAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,MAAM,EAAC,QAAtB;AAA+B,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWlB;AAAnD,QANJ,EAOI,MAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWjB;AAApC,iBAPJ,CADJ;AAaH;;;;EAxCmBX,S;;AA2CxB,eAAeQ,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\r\nimport Lottery from '../ethereum/lottery';\r\nimport web3 from '../ethereum/web3';\r\nimport { Router } from '../routes';\r\n\r\n\r\nclass Whithdraw extends Component {\r\n    state = {\r\n        value: '',\r\n        errorMessage: '',\r\n        loading: false\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const lottery = Lottery(this.props.address);\r\n\r\n        this.setState({ loading: true, errorMessage: '' })\r\n\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            await lottery.methods.withdrawETH().send({\r\n                from: accounts[0],\r\n                gas: '3000000'\r\n            });\r\n\r\n            this.setState({ loading: false, errorMessage: '' })\r\n            Router.replaceRoute(`/lottery/${this.props.address}`)\r\n        } catch (error) {\r\n            this.setState({ errorMessage: error })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.onSubmit}>\r\n                <Form.Field>\r\n                    <label>Whithdraw</label>\r\n                    <p>\r\n                        After the draw, the lottery manager can withdraw his share</p>\r\n                </Form.Field>\r\n                <Message error header=\"Ooops!\" content={this.state.errorMessage} />\r\n                <Button primary loading={this.state.loading}>\r\n                    Entry\r\n                  </Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Whithdraw;"]},"metadata":{},"sourceType":"module"}